#!/bin/bash

# repeat comand
# sudo apt-get install php5-sqlite3

#save last command command

create_func_with_name() {
    if [ ! -z "$1" ]; then
      eval "$1() {
        DO $1
      }"
    fi;
}

function SV() {
    if [ "$2" = "" ] || [[ $2 =~ ^[0-9]+$ ]]; then
        commandNum=2
        if [ "$2" != "" ]; then
            if [[ $2 =~ ^[0-9]+$ ]]; then #get N command; check if is num
                commandNum=$(($2+1))
            fi;
        fi;

        savedCommand=$(fc -l -${commandNum} | sed -n 1p | cut -c 4-) # | sed -n 1p | cut -c 4-
    else
        savedCommand="${@:2}"
    fi;

    aliasName=""
    if [ "$1" != "" ]; then
      aliasName="$1"
    fi;

    nowTime=`date +"%Y-%m-%d %H:%M:%S"`
    aliasId=`DB query "select id from cmd where alias = '${aliasName}'" --single`

    if [ "$aliasName" != "" ] && [ "$savedCommand" != "" ]; then
      if [ "$aliasId" = "" ]; then
        echo "cmd insert: $aliasName"
        echo "command: $savedCommand"
        DB exec "INSERT INTO cmd (alias, cmd, exec_time) VALUES ('${aliasName}', '${savedCommand}', '${nowTime}')"
        #create alias $aliasName
        create_func_with_name  $aliasName
      else
        echo "cmd update: $aliasName"
        echo "command: $savedCommand"
        DB exec "UPDATE cmd SET cmd = '${savedCommand}', exec_time = '${nowTime}' WHERE alias = '${aliasName}' "
        #create alias $aliasName
        create_func_with_name  $aliasName
      fi;
    else
        echo "SV                  >> insert or update last command"
        echo "SV {alias}          >> save last command with {alias}"
        echo "SV {alias} {n}      >> save last {n} command with {alias}"
    fi;
}

for var in "$@"
do
    if [ "$var" = "--list" ]; then
        param_list=1
    elif [ "$var" = "--load" ]; then
        param_load=1
    elif [ "$var" = "--init" ]; then
        param_init=1
    elif [ "$var" = "--view" ] || [ "$var" = "-v" ]; then
        param_view=1
    elif [ "$var" = "--remove" ]; then
        param_remove=1
    elif [ "$var" = "--clean-all" ]; then
        param_clean_all=1
    else
        param_value="$var"
    fi
done

if [ ! -z "$param_list" ] ; then
    DB query "select * from cmd"
elif [ ! -z "$param_load" ]; then
    export -f SV
    aliases=`DB query "select alias from cmd" --simple`
    while IFS= read
    do
        create_func_with_name $REPLY
    done <<< "$aliases"
elif [ ! -z "$param_init" ]; then
    echo "create table"
    DB exec "CREATE TABLE IF NOT EXISTS cmd
        (
            id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
            alias VARCHAR(255) NULL,
            cmd VARCHAR(255) NOT NULL,
            exec_time VARCHAR(20) NOT NULL
        );"
elif [ ! -z "$param_remove" ] && [ ! -z "$param_value" ]; then
      removeAlias="$param_value"
      if [[ $removeAlias =~ ^[0-9]+$ ]]; then #remove with id
        echo "remove id: $removeAlias"
        DB exec "DELETE from cmd WHERE id = '${removeAlias}'"
      else
        echo "remove alias: $removeAlias"
        DB exec "DELETE from cmd WHERE alias = '${removeAlias}'"
      fi;
elif [ ! -z "$param_clean_all" ]; then
      echo "Purge cmd table"
      DB exec "DELETE from cmd WHERE 1;"
elif [ ! -z "$param_value" ]; then
    cmd=`DB query "select cmd from cmd where alias = '$param_value'" --single`

    if [ ! -z "$param_view" ]; then
        echo $cmd
    else
        eval $cmd
    fi;

elif [ -z "$param_value" ]; then
    echo "DO --list           >> list all commands"
    echo "DO --init           >> create table cmd"
    echo ". DO --load         >> load SV function and all aliases from db"
    echo "DO {alias}          >> run command"
    echo "DO {alias} --view   >> display command"
    echo "SV                  >> insert or update last command"
    echo "SV {alias}          >> save last command with {alias}"
    echo "SV {alias} {n}      >> save last {n} command with {alias}"
    echo "DO --remove {alias} >> remove command with {alias} from db"
    echo "DO --remove {id}    >> remove command with {id} from db"
    echo "DO --clean-all      >> purge database"
fi;
